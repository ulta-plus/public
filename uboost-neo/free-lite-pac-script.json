{
  "free": "function FindProxyForURL(url, host) {\n  const SPECIAL_CASES = {\n    'music.youtube.com': 'DIRECT',\n    'play.google.com': 'PROXY 93.123.30.136:62496'\n  };\n\n  const DEFAULT_PROXY = 'PROXY ${PROXY_HOST}:${PROXY_PORT}';\n  const DIRECT = 'DIRECT';\n\n  const domains = {\n    blockedDomainsOfLevel2: [\n      'ggpht.com',\n      'googlevideo.com',\n      'youtube.com'\n    ]\n  };\n\n  function binaryContains(arr, target) {\n    let left = 0;\n    let right = arr.length - 1;\n    while (left <= right) {\n      const mid = Math.floor((left + right) / 2);\n      if (arr[mid] === target) return true;\n      if (arr[mid] < target) left = mid + 1;\n      else right = mid - 1;\n    }\n    return false;\n  }\n\n  for (const [domain, result] of Object.entries(SPECIAL_CASES)) {\n    if (dnsDomainIs(host, '.' + domain)) {\n      return result;\n    }\n  }\n\n  const domainParts = host.split('.');\n  const domainLevel = domainParts.length;\n\n  if (domainLevel < 2) return DIRECT;\n\n  let currentHost = host;\n  for (let i = domainLevel; i > 1; i--) {\n    if (domainLevel - i) {\n      currentHost = currentHost.substring(currentHost.indexOf('.') + 1);\n    }\n    if (domains['blockedDomainsOfLevel' + i] && \n        binaryContains(domains['blockedDomainsOfLevel' + i], currentHost)) {\n      return DEFAULT_PROXY;\n    }\n  }\n\n  return DIRECT;\n}"
}
